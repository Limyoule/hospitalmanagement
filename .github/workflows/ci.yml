name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        working-directory: ./hospitalmanagement
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run build script
        working-directory: ./hospitalmanagement
        run: .\build.bat

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DJANGO_SETTINGS_MODULE: hospitalmanagement.settings
      DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/test_db

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        working-directory: ./hospitalmanagement
        run: pip install -r requirements.txt

      - name: Run migrations
        working-directory: ./hospitalmanagement
        run: python manage.py migrate

      - name: Run pytest with coverage + reports
        working-directory: ./hospitalmanagement
        run: |
          pytest --cov=hospital \
                 --cov-report=term-missing \
                 --cov-report=html \
                 --junitxml=test-results.xml \
                 --html=report.html \
                 --self-contained-html

      - name: Upload test reports
        if: always()
        working-directory: ./hospitalmanagement
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            htmlcov
            report.html
            test-results.xml

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/hospitalmanagement:latest ./hospitalmanagement

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/hospitalmanagement:latest
